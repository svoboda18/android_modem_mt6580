/*****************************************************************************
*  Copyright Statement:
*  --------------------
*  This software is protected by Copyright and the information contained
*  herein is confidential. The software may not be copied and the information
*  contained herein may not be used or disclosed except with the written
*  permission of MediaTek Inc. (C) 2006
*
*  BY OPENING THIS FILE, BUYER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
*  THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
*  RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO BUYER ON
*  AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL WARRANTIES,
*  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF
*  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR NONINFRINGEMENT.
*  NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH RESPECT TO THE
*  SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY, INCORPORATED IN, OR
*  SUPPLIED WITH THE MEDIATEK SOFTWARE, AND BUYER AGREES TO LOOK ONLY TO SUCH
*  THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO. MEDIATEK SHALL ALSO
*  NOT BE RESPONSIBLE FOR ANY MEDIATEK SOFTWARE RELEASES MADE TO BUYER'S
*  SPECIFICATION OR TO CONFORM TO A PARTICULAR STANDARD OR OPEN FORUM.
*
*  BUYER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S ENTIRE AND CUMULATIVE
*  LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE RELEASED HEREUNDER WILL BE,
*  AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE MEDIATEK SOFTWARE AT ISSUE,
*  OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE CHARGE PAID BY BUYER TO
*  MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
*
*  THE TRANSACTION CONTEMPLATED HEREUNDER SHALL BE CONSTRUED IN ACCORDANCE
*  WITH THE LAWS OF THE STATE OF CALIFORNIA, USA, EXCLUDING ITS CONFLICT OF
*  LAWS PRINCIPLES.  ANY DISPUTES, CONTROVERSIES OR CLAIMS ARISING THEREOF AND
*  RELATED THERETO SHALL BE SETTLED BY ARBITRATION IN SAN FRANCISCO, CA, UNDER
*  THE RULES OF THE INTERNATIONAL CHAMBER OF COMMERCE (ICC).
*
*****************************************************************************/

/*****************************************************************************
 *
 * Filename:
 * ---------
 *   combo_sfi_defs.h
 *
 * Project:
 * --------
 *   Maui_Software
 *
 * Description:
 * ------------
 *   defines flash ID table
 *
 * Author:
 * -------
 *  EMI auto generator V7.189
 *
 *   Memory Device database last modified on 2011/8/23
 *
 *============================================================================
 *             HISTORY
 * Below this line, this part is controlled by PVCS VM. DO NOT MODIFY!!
 *------------------------------------------------------------------------------
 * $Revision$
 * $Modtime$
 * $Log$
 *
 * 12 27 2012 money.kang
 * [MOLY00007827] [Create New Project][PMA used] Create MT6582 project on WR8
 * .
 *
 * 01 19 2012 vanessa.tsai
 * [MAUI_03117785] [Create New Project][PMA used]01/16~01/31
 * .
 *
 * 01 09 2012 vanessa.tsai
 * [MAUI_03108533] [Create New Project][PMA used]01/02~01/14
 * .
 *
 * 01 08 2012 chun-hung.wu
 * [MAUI_03110648] [Custom File] [MTD] [FDM] MT6250 and MT6280
 * .
 *
 * 10 26 2011 chun-hung.wu
 * [MAUI_03063499] [6255D][DVT] Custom Files and SF driver manually check-in
 * .
 *
 * 09 05 2011 season.chen
 * [MAUI_03021010] [MT6255D]MT6255_DVT Branch SFC check in
 * .
 *
 *------------------------------------------------------------------------------
 * Upper this line, this part is controlled by PVCS VM. DO NOT MODIFY!!
 *============================================================================
 ****************************************************************************/
//MANUAL-CHECKIN
#ifndef _COMBO_SFI_DEFS_H
#define _COMBO_SFI_DEFS_H

//-----------------------------------------------------------------------------
// Combo MEM HW Settings
//-----------------------------------------------------------------------------
#define COMBO_SFI_VER  1



#if defined(_SFI_SIP_SerialFlash)
#define SFI_COMBO_COUNT    1
#elif defined(__COMBO_MEMORY_SUPPORT__)
#define SFI_COMBO_COUNT    COMBO_MEM_ENTRY_COUNT
#else
#define SFI_COMBO_COUNT    1
#endif

typedef struct {
    kal_uint32      HWConf_104M[9];     // to be defined by SFI/EMI owner
    kal_uint8       DevInit_104M[32];   // to be defined by SFI/EMI owner  (reserved for serial flash)
    kal_uint32      HWConf_78M[9];     // to be defined by SFI/EMI owner
    kal_uint8       DevInit_78M[32];   // to be defined by SFI/EMI owner  (reserved for serial flash)
    kal_uint32      HWConf_13M[7];     // to be defined by SFI/EMI owner
    
} CMEMEntrySFI;

typedef struct {
    kal_uint32      HWConf_104M[5];     // to be defined by SFI/EMI owner
    kal_uint32      HWConf_78M[5];     // to be defined by SFI/EMI owner
    kal_uint32      HWConf_13M[3];     // to be defined by SFI/EMI owner   
} CMEMEntrySFI_DCM;

typedef struct {
    kal_uint32      HWConf[16];     // to be defined by EMI owner
} CMEMEntryEMI;

typedef struct {
#if defined(MT6251) || defined(MT6255) || defined(MT6250) || defined(MT6280)
char                   m_identifier[16];   // MTK_COMBO_ID_INFO
#elif defined(MT6253L)||defined(MT6252)
#ifdef __SV5_ENABLED__
    GFH_Header_Type    mem_info;   //
#else
    char               m_identifier[16];   // MTK_COMBO_ID_INFO
#endif
#endif //defined(MT6251)
    unsigned int       m_ver;
    unsigned int       Count;
    CMEMEntrySFI       List[SFI_COMBO_COUNT];  // to be defined by SFI/EMI owner
} CMEMEntrySFIList;

typedef struct {
    CMEMEntrySFI_DCM      List[SFI_COMBO_COUNT];  // to be defined by SFI/EMI owner
} CMEMEntrySFIList_dcm;

#endif

