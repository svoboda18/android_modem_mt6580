/*****************************************************************************
*  Copyright Statement:
*  --------------------
*  This software is protected by Copyright and the information contained
*  herein is confidential. The software may not be copied and the information
*  contained herein may not be used or disclosed except with the written
*  permission of MediaTek Inc. (C) 2006
*
*  BY OPENING THIS FILE, BUYER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
*  THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
*  RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO BUYER ON
*  AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL WARRANTIES,
*  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF
*  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR NONINFRINGEMENT.
*  NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH RESPECT TO THE
*  SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY, INCORPORATED IN, OR
*  SUPPLIED WITH THE MEDIATEK SOFTWARE, AND BUYER AGREES TO LOOK ONLY TO SUCH
*  THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO. MEDIATEK SHALL ALSO
*  NOT BE RESPONSIBLE FOR ANY MEDIATEK SOFTWARE RELEASES MADE TO BUYER'S
*  SPECIFICATION OR TO CONFORM TO A PARTICULAR STANDARD OR OPEN FORUM.
*
*  BUYER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S ENTIRE AND CUMULATIVE
*  LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE RELEASED HEREUNDER WILL BE,
*  AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE MEDIATEK SOFTWARE AT ISSUE,
*  OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE CHARGE PAID BY BUYER TO
*  MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
*
*  THE TRANSACTION CONTEMPLATED HEREUNDER SHALL BE CONSTRUED IN ACCORDANCE
*  WITH THE LAWS OF THE STATE OF CALIFORNIA, USA, EXCLUDING ITS CONFLICT OF
*  LAWS PRINCIPLES.  ANY DISPUTES, CONTROVERSIES OR CLAIMS ARISING THEREOF AND
*  RELATED THERETO SHALL BE SETTLED BY ARBITRATION IN SAN FRANCISCO, CA, UNDER
*  THE RULES OF THE INTERNATIONAL CHAMBER OF COMMERCE (ICC).
*
*****************************************************************************/

/*****************************************************************************
 *
 * Filename:
 * ---------
 *   custom_SFI.h
 *
 * Project:
 * --------
 *   Maui_Software
 *
 * Description:
 * ------------
 *   This Module defines the SFI (serial flash interface) related setting.
 *
 * Author:
 * -------
 *  Chun-Hung Wu(mtk03818)   EMI auto generator V8.229
 *
 *   Memory Device database last modified on 2011/12/2
 *
 *============================================================================
 *             HISTORY
 * Below this line, this part is controlled by PVCS VM. DO NOT MODIFY!!
 *------------------------------------------------------------------------------
 * $Revision$
 * $Modtime$
 * $Log$
 *
 * 12 27 2012 money.kang
 * [MOLY00007827] [Create New Project][PMA used] Create MT6582 project on WR8
 * .
 *
 * 01 19 2012 vanessa.tsai
 * [MAUI_03117785] [Create New Project][PMA used]01/16~01/31
 * .
 *
 * 01 09 2012 vanessa.tsai
 * [MAUI_03108533] [Create New Project][PMA used]01/02~01/14
 * .
 *
 * 01 04 2012 chun-hung.wu
 * [MAUI_03110711] [Change Feature][Serial flash] MT6255D support 3.3V internal LDO/ Workaround for MT625x APB/AHB bus limitation
 * .
 *
 * 01 04 2012 Chun-Hung Wu
 * [MAUI_03110648] [Custom File] MT6280
 * .
 *
 *------------------------------------------------------------------------------
 * Upper this line, this part is controlled by PVCS VM. DO NOT MODIFY!!
 *============================================================================
 ****************************************************************************/

#ifndef __CUSTOM_SFI__
#define __CUSTOM_SFI__

/*
 ****************************************************************************
 Specify the chip select configuration
 Possible choices, NOR_FLASH, RAM, LPSDRAM, UNUSED
 ****************************************************************************
 */

/*
 ****************************************************************************
 Specify RAM size in Bytes
 ****************************************************************************
*/


/*
 ****************************************************************************
 Define the driving and cache/prefetch setting (optional)
 ****************************************************************************
*/

#define __SFI_CLK_78MHZ__

#define __SFI_DCM_COMBO_INDEX_UND   0xffffffff

#if defined(MT6252) || defined(MT6251)
typedef enum {
    SFC_MAC_CTL            = 0x0      // Write Enable Latch
   ,SFC_MISC_CTL_1         = 0x1      // Write Suspend Program Status   
   ,SFC_DLY_CTL_1          = 0x2      // Security ID status (Once set by Lock Security ID (0x85h) it can not be reset)   
   ,SFC_DR_CTL             = 0x3      // Write operation status (Write In Progress Bit)
   ,SFC_Driving_1          = 0x4      // Write operation status (Write In Progress Bit)
   ,SFC_Driving_2          = 0x5      // Write operation status (Write In Progress Bit)
   ,SFC_Reserved           = 0x6      // Write operation status (Write In Progress Bit)
   ,SFC_MISC_CTL_2         = 0x7      // Write Protection Lockdown Status (Resets to 0 after a power cycle)
   ,SFC_DLY_CTL_2          = 0x8      // Write operation status (Write In Progress Bit)
} SF_SFC_Control_Reg_Enum;

#elif defined(MT6255)
typedef enum {
    SFC_MAC_CTL            = 0x0      // Write Enable Latch
   ,SFC_DR_CTL             = 0x1      // Write Suspend Program Status   
   ,SFC_MISC_CTL           = 0x2      // Security ID status (Once set by Lock Security ID (0x85h) it can not be reset)   
   ,SFC_DLY_CTL2           = 0x3      // Write operation status (Write In Progress Bit)
   ,SFC_DLY_CTL3           = 0x4      // Write operation status (Write In Progress Bit)
   ,SFC_Driving            = 0x5      // Write operation status (Write In Progress Bit)
   ,SFC_Reserved           = 0x6      // Write operation status (Write In Progress Bit)
   ,SFC_DLY_CTL4           = 0x7      // Write operation status (Write In Progress Bit)
   ,SFC_DLY_CTL5           = 0x8      // Write operation status (Write In Progress Bit)
} SF_SFC_Control_Reg_Enum;
#endif
#define ProcessID          ((volatile UINT32P)(EFUSE_base+0x0024))  /* Chip ID register 3 */

#if defined(MT6251)
#define ACIF_CON4        ((volatile UINT16P)(CONFIG_base+0x718))
#define ACIF_CON5            ((volatile UINT16P)(CONFIG_base+0x71C))
//#define SFI_CLOCK     78

#elif defined(MT6253L)||defined(MT6252)
#define ACIF_CON0        ((volatile UINT32P)(CONFIG_base+0x700))
#elif defined(MT6255)
#define IO_DRV2        ((volatile UINT32P)(CONFIG_base+0x508))
#define SFC_CTRL_SET        ((volatile UINT32P)(CONFIG_base+0x61C))
#define VSF_CON0       ((volatile UINT16P)(MIXED_base+0x700))
#define VSF_CON3       ((volatile UINT16P)(MIXED_base+0x70C))

#endif

static const CMEMEntrySFIList_dcm combo_mem_hw_list_dcm = {   // (to be renamed by SFI owner)

    //COMBO_SFI_VER,           // SFI structure version
    //COMBO_MEM_ENTRY_COUNT,   // defined in custom_Memorydevice.h
    {
        {   // W25Q128BVEIM
            {   // HW config 104Mhz Start
                0,  // SF_MAC_CTL
                0,  // SF_MISC_CTL
                0,  // SF_DLY_CTL
                0,  // SF_MISC_CTL
                0,  // SF_DLY_CTL
            },  // HW config End
            {   // HW config 78Mhz Start
                0x000B0000,  // SF_MAC_CTL
                0xA4EBF290,  // SF_MISC_CTL
                0x00005555,  // SF_DLY_CTL
                0,  // SF_MISC_CTL
                0,  // SF_DLY_CTL
            },  // HW config End
            {   // HW config 13Mhz Start
                0x000B0000,  // SF_MAC_CTL
                0xA0EBF210,  // SF_MISC_CTL
                0x0,  // SF_DLY_CTL
            }  // HW config End

        }

    }
};

/*
 ****************************************************************************
 Specify the related EMI Setting
 ****************************************************************************
*/

/*
 ****************************************************************************
 Specify additional information
 ****************************************************************************
*/

#endif /* __CUSTOM_SFI__ */

